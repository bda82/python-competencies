# -*- coding: utf-8 -*-

from typing import List


def task():
    """
    Сложность: Средняя

    Условие задачи: дается два двумерных массива, содержащих нули 
    (означают воду) и единицы (суша). 
    Остров - совокупность единиц, соединенных между собой в четырех направлениях 
    (по горизонтали или вертикали). 

    Острова на второй решетке рассматриваются как подострова только в случае 
    полного соответствия отображения с первой решетки. 

    Необходимо вычислить количество подостровов на втором поле. 

    Пример:

    Ввод: 
    grid1 = [
        [1,1,1,0,0],
        [0,1,1,1,1],
        [0,0,0,0,0],
        [1,0,0,0,0],
        [1,1,0,1,1]
    ], 
    grid2 = [
        [1,1,1,0,0],
        [0,0,1,1,1],
        [0,1,0,0,0],
        [1,0,1,1,0],
        [0,1,0,1,0]
    ]
    
    Вывод: 3
    
    Объяснение:

    Решение задачи заключается сначала в пересечении двух матриц и 
    выделением на второй лишь островов, которые соответствуют первому полю, 
    а дальше осуществляется подсчёт. 

    Ввод: 
    grid1 = [
        [1,0,1,0,1],
        [1,1,1,1,1],
        [0,0,0,0,0],
        [1,1,1,1,1],
        [1,0,1,0,1]
    ], 
    grid2 = [
        [0,0,0,0,0],
        [1,1,1,1,1],
        [0,1,0,1,0],
        [0,1,0,1,0],
        [1,0,0,0,1]
    ]
    Вывод: 2 
    """


class Solution:
    def count_sub_is_islands(self, grid1: List[List[int]], grid2:  List[List[int]]) -> int:
        m = len(grid1)
        n = len(grid1[0])

        def dfs(i, j):
            if i < 0 or i >= m or j < 0 or j >= n or grid2[i][j] == 0:
                return
            
            grid2[i][j] = 0
            
            dfs(i + 1, j)
            dfs(i, j + 1)
            dfs(i, j - 1)
            dfs(i-1, j)

        for i in range(m):
            for j in range(n):
                if grid2[i][j] == 1 and grid1[i][j] == 0:
                    dfs(i, j)

        c = 0

        for i in range(m):
            for j in range(n):
                if grid2[i][j] == 1:
                    dfs(i, j)
                    c += 1

        return c
    

grid1 = [
    [1,1,1,0,0],
    [0,1,1,1,1],
    [0,0,0,0,0],
    [1,0,0,0,0],
    [1,1,0,1,1]
]

grid2 = [
    [1,1,1,0,0],
    [0,0,1,1,1],
    [0,1,0,0,0],
    [1,0,1,1,0],
    [0,1,0,1,0]
]

s = Solution()
print(s.count_sub_is_islands(grid1=grid1, grid2=grid2))

grid1 = [
    [1,0,1,0,1],
    [1,1,1,1,1],
    [0,0,0,0,0],
    [1,1,1,1,1],
    [1,0,1,0,1]
]

grid2 = [
    [0,0,0,0,0],
    [1,1,1,1,1],
    [0,1,0,1,0],
    [0,1,0,1,0],
    [1,0,0,0,1]
]

print(s.count_sub_is_islands(grid1=grid1, grid2=grid2))